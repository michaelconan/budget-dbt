
version: 2

models:
  - name: stg_revolut__combined
    description: "Combined raw Revolut transactions from personal, spouse, and joint accounts with standardized product names"
    columns:
      - name: type
        description: "The kind of the transaction"
        data_type: text
        data_tests:
          - not_null
      - name: product
        description: "The type of account (Current, Pocket, Savings, Joint, Spouse)"
        data_type: text
        data_tests:
          - not_null
      - name: started_date
        description: "The date when the transaction was initiated"
        data_type: timestamp
        data_tests:
          - not_null
      - name: completed_date
        description: "The date when the transaction was completed"
        data_type: timestamp
        data_tests:
          - not_null:
              config:
                where: "state = 'COMPLETED'"
      - name: description
        description: "The transaction description provided by Revolut"
        data_type: text
        data_tests:
          - not_null
      - name: amount
        description: "The amount of the transaction"
        data_type: real
        data_tests:
          - not_null
      - name: fee
        description: "Any fee charged for the transaction"
        data_type: real
        data_tests:
          - not_null
      - name: currency
        description: "The currency code of the transaction"
        data_type: text
        data_tests:
          - not_null
      - name: state
        description: "Whether the transaction is posted, pending, or reverted"
        data_type: text
        data_tests:
          - not_null
      - name: balance
        description: "The account balance after the transaction"
        data_type: real
        data_tests:
          - not_null:
              config:
                where: "state = 'COMPLETED'"
  - name: stg_revolut__transactions
    description: "Transactions from Revolut personal and joint accounts and pockets"
    columns:
      - name: transaction_key
        description: "The unique hash key for the transaction"
        data_type: text
        data_tests:
          - not_null
          - unique
      - name: type
        description: "The kind of the transaction"
        data_type: text
        data_tests:
          - not_null
      - name: product
        description: "The type of account in which the transaction was made"
        data_type: text
        data_tests:
          - not_null
      - name: started_date
        description: "The date when the transaction was initiated (ISO format)"
        data_type: text
        data_tests:
          - not_null
      - name: completed_date
        description: "The date when the transaction was completed (ISO format)"
        data_type: text
        data_tests:
          - not_null
      - name: description
        description: "The transaction description provided by Revolut"
        data_type: text
        data_tests:
          - not_null
      - name: amount
        description: "The amount of the transaction"
        data_type: real
        data_tests:
          - not_null
      - name: fee
        description: "Any fee charged for the transaction"
        data_type: real
        data_tests:
          - not_null
      - name: currency
        description: "The currency code of the transaction"
        data_type: text
        data_tests:
          - not_null
      - name: state
        description: "Whether the transaction is posted or reverted"
        data_type: text
        data_tests:
          - not_null
      - name: balance
        description: "The account balance after the transaction"
        data_type: real
        data_tests:
          - not_null
      - name: is_transfer
        description: "Boolean flag indicating if this transaction is a transfer between accounts"
        data_type: boolean
        data_tests:
          - not_null
      - name: category
        description: "The assigned category for the transaction based on description matching"
        data_type: text
        data_tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              arguments:
                column_type: varchar
